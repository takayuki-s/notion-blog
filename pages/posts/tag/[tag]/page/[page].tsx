import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { getNumberOfPages, getPostsByPage } from '../../../../../lib/notionAPI'
import SinglePost from '../../../../../components/Post/SinglePost'
import { GetStaticPaths, GetStaticProps } from 'next'
import Pagination from '../../../../../components/Pagination/Pagination'

export const getStaticPaths: GetStaticPaths = async () => {
  const numberOfPage = 1
  let params = []
  for (let i = 1; i <= numberOfPage; i++) {
    params.push({ params: { tag: 'blog', page: '1' } })
  }
  return {
    paths: params,
    fallback: 'blocking',
  }
}

export const getStaticProps: GetStaticProps = async (context) => {
  const currentPage = context.params?.page
  const postsByPage = await getPostsByPage(parseInt(currentPage.toString(), 10))
  const numberOfPage = await getNumberOfPages()

  return {
    props: {
      postsByPage,
      numberOfPage,
    },
    revalidate: 60 * 60 * 6, // 6時間ごとに更新
  }
}

const BlogPageList = ({ postsByPage, numberOfPage }) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">
          Notion Blog🚀
        </h1>
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {postsByPage.map((post) => (
            <div key={post.id}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPaginationPage={true}
              />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPage} />
      </main>
    </div>
  )
}

export default BlogPageList
