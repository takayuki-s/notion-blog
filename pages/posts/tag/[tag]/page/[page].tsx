import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {
  getAllTags,
  getNumberOfPagesByTag,
  getPostsByTagAndPage,
} from '../../../../../lib/notionAPI'
import SinglePost from '../../../../../components/Post/SinglePost'
import { GetStaticPaths, GetStaticProps } from 'next'
import Pagination from '../../../../../components/Pagination/Pagination'
import Tag from '../../../../../components/Tag/Tag'

export const getStaticPaths: GetStaticPaths = async () => {
  const allTags = await getAllTags()
  let params = []
  await Promise.all(
    allTags.map((tag: string) => {
      return getNumberOfPagesByTag(tag).then((numberOfPagesByTag: number) => {
        for (let i = 1; i <= numberOfPagesByTag; i++) {
          params.push({ params: { tag: tag, page: i.toString() } })
        }
      })
    }),
  )
  return {
    paths: params,
    fallback: 'blocking',
  }
}

export const getStaticProps: GetStaticProps = async (context) => {
  const currentPage: string = context.params?.page.toString()
  const currentTag: string = context.params?.tag.toString()
  const posts = await getPostsByTagAndPage(
    currentTag,
    parseInt(currentPage, 10),
  )

  const numberOfPagesByTag = await getNumberOfPagesByTag(currentTag)
  const allTags = await getAllTags()

  return {
    props: {
      posts,
      numberOfPagesByTag,
      currentTag,
      allTags,
    },
    revalidate: 60 * 60 * 6, // 6時間ごとに更新
  }
}

const BlogPageList = ({ posts, numberOfPagesByTag, currentTag, allTags }) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">
          Notion Blog🚀
        </h1>
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {posts.map((post) => (
            <div key={post.id}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPaginationPage={true}
              />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPagesByTag} tag={currentTag} />
        <Tag tags={allTags} />
      </main>
    </div>
  )
}

export default BlogPageList
